// Signature format: 2.0
package android.scheduling {

  public final class RebootReadinessManager {
    method @RequiresPermission(android.Manifest.permission.SIGNAL_REBOOT_READINESS) public void addRebootReadinessListener(@NonNull java.util.concurrent.Executor, @NonNull android.scheduling.RebootReadinessManager.RebootReadinessListener);
    method @RequiresPermission(android.Manifest.permission.REBOOT) public void cancelPendingReboot(@NonNull android.content.Context);
    method @RequiresPermission(android.Manifest.permission.REBOOT) public boolean isReadyToReboot();
    method @RequiresPermission(android.Manifest.permission.REBOOT) public void markRebootPending(@NonNull android.content.Context);
    method @RequiresPermission(android.Manifest.permission.SIGNAL_REBOOT_READINESS) public void removeRebootReadinessListener(@NonNull android.scheduling.RebootReadinessManager.RebootReadinessListener);
  }

  public static interface RebootReadinessManager.RebootReadinessListener {
    method @NonNull public android.scheduling.RebootReadinessManager.RebootReadinessStatus onRebootPending();
  }

  public static final class RebootReadinessManager.RebootReadinessStatus {
    ctor public RebootReadinessManager.RebootReadinessStatus(boolean, long, @NonNull String);
  }

}

